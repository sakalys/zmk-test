/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        r1: r1 {
            compatible = "zmk,behavior-mod-morph";
            label = "R1";
            bindings = <&kp Q>, <&kp NUMBER_1>;

            #binding-cells = <0>;
            mods = <(MOD_RGUI)>;
        };

        r2: r2 {
            compatible = "zmk,behavior-mod-morph";
            label = "R2";
            bindings = <&kp W>, <&kp NUMBER_2>;

            #binding-cells = <0>;
            mods = <(MOD_RGUI)>;
        };

        r3: r3 {
            compatible = "zmk,behavior-mod-morph";
            label = "R3";
            bindings = <&kp E>, <&kp NUMBER_3>;

            #binding-cells = <0>;
            mods = <(MOD_RGUI)>;
        };

        r4: r4 {
            compatible = "zmk,behavior-mod-morph";
            label = "R4";
            bindings = <&kp R>, <&kp NUMBER_4>;

            #binding-cells = <0>;
            mods = <(MOD_RGUI)>;
        };

        r5: r5 {
            compatible = "zmk,behavior-mod-morph";
            label = "R5";
            bindings = <&kp T>, <&kp NUMBER_5>;

            #binding-cells = <0>;
            mods = <(MOD_RGUI)>;
        };

        r6: r6 {
            compatible = "zmk,behavior-mod-morph";
            label = "R6";
            bindings = <&kp Y>, <&kp NUMBER_6>;

            #binding-cells = <0>;
            mods = <(MOD_RGUI)>;
        };

        r8: r8 {
            compatible = "zmk,behavior-mod-morph";
            label = "R8";
            bindings = <&kp I>, <&kp N8>;

            #binding-cells = <0>;
            mods = <(MOD_RGUI)>;
        };

        r7: r7 {
            compatible = "zmk,behavior-mod-morph";
            label = "R7";
            bindings = <&kp U>, <&kp NUMBER_7>;

            #binding-cells = <0>;
            mods = <(MOD_RGUI)>;
        };

        r9: r9 {
            compatible = "zmk,behavior-mod-morph";
            label = "R9";
            bindings = <&kp O>, <&kp N9>;

            #binding-cells = <0>;
            mods = <(MOD_RGUI)>;
        };

        r0: r0 {
            compatible = "zmk,behavior-mod-morph";
            label = "R0";
            bindings = <&kp P>, <&kp N0>;

            #binding-cells = <0>;
            mods = <(MOD_RGUI)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R      &kp T    &kp Y  &kp U      &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F      &kp G    &kp H  &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V      &kp B    &kp N  &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RGUI
                         &kp LGUI  &kp SPACE  &mo 1    &mo 2  &kp ENTER  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &kp N1        &kp N7  &kp N8        &kp N9     &kp N5          &kp N6    &kp N7     &kp N8    &kp N9     &kp N0  &kp DEL
&bt BT_CLR  &bt BT_SEL 0  &kp N4  &kp N5        &kp N6     &bt BT_SEL 4    &kp LEFT  &kp DOWN   &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT   &trans        &kp N1  &kp NUMBER_2  &kp N3     &out OUT_BLE    &trans    &trans     &trans    &trans     &trans  &trans
                                  &kp N0        &kp SPACE  &trans          &trans    &kp ENTER  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR   &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR   &kp RPAR  &kp DEL
&kp LCTRL   &trans    &trans  &trans    &trans     &trans       &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &kp BSLH  &kp GRAVE
&kp LSHFT   &trans    &trans  &trans    &trans     &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC   &kp PIPE  &kp TILDE
                              &kp LGUI  &kp SPACE  &trans       &trans     &kp ENTER  &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
