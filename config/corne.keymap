/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        q1: q1 {
            compatible = "zmk,behavior-mod-morph";
            label = "Q1";
            bindings = <&kp Q>, <&kp LG(NUMBER_1)>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
        };

        w2: w2 {
            compatible = "zmk,behavior-mod-morph";
            label = "W2";
            bindings = <&kp W>, <&kp LG(NUMBER_2)>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
        };

        e3: e3 {
            compatible = "zmk,behavior-mod-morph";
            label = "E3";
            bindings = <&kp E>, <&kp LG(NUMBER_3)>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
        };

        r4: r4 {
            compatible = "zmk,behavior-mod-morph";
            label = "R4";
            bindings = <&kp R>, <&kp LG(NUMBER_4)>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
        };

        t5: t5 {
            compatible = "zmk,behavior-mod-morph";
            label = "T5";
            bindings = <&kp T>, <&kp LG(NUMBER_5)>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
        };

        y6: y6 {
            compatible = "zmk,behavior-mod-morph";
            label = "Y6";
            bindings = <&kp Y>, <&kp NUMBER_6>;

            #binding-cells = <0>;
            mods = <(MOD_RGUI)>;
        };

        i8: i8 {
            compatible = "zmk,behavior-mod-morph";
            label = "I8";
            bindings = <&kp I>, <&kp N8>;

            #binding-cells = <0>;
            mods = <(MOD_RGUI)>;
        };

        u7: u7 {
            compatible = "zmk,behavior-mod-morph";
            label = "U7";
            bindings = <&kp U>, <&kp NUMBER_7>;

            #binding-cells = <0>;
            mods = <(MOD_RGUI)>;
        };

        o9: o9 {
            compatible = "zmk,behavior-mod-morph";
            label = "O9";
            bindings = <&kp O>, <&kp N9>;

            #binding-cells = <0>;
            mods = <(MOD_RGUI)>;
        };

        p0: p0 {
            compatible = "zmk,behavior-mod-morph";
            label = "P0";
            bindings = <&kp P>, <&kp N0>;

            #binding-cells = <0>;
            mods = <(MOD_RGUI)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <19 20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&mo 4         &kp Q  &kp W  &kp E  &kp R           &kp T        &kp Y      &kp U      &kp I      &kp O    &kp P     &kp BSPC
&mt LGUI TAB  &kp A  &kp S  &kp D  &lt 2 F         &kp G        &kp H      &kp J      &kp K      &kp L    &kp SEMI  &mt LGUI SINGLE_QUOTE
&mo 5         &kp Z  &kp X  &kp C  &kp V           &kp B        &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp LALT
                            &mo 3  &kp LEFT_SHIFT  &kp SPACE    &kp ENTER  &kp LCTRL  &mo 1
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &trans  &kp N7  &kp N8        &kp N9  &kp PLUS        &trans     &trans     &trans  &trans     &trans    &kp DELETE
&trans      &trans  &kp N4  &kp N5        &kp N6  &kp MINUS       &kp LEFT   &kp DOWN   &kp UP  &kp RIGHT  &trans    &trans
&trans      &trans  &kp N1  &kp NUMBER_2  &kp N3  &kp NUMBER_0    &kp PG_UP  &kp PG_DN  &trans  &trans     &kp HOME  &kp END
                            &trans        &trans  &trans          &trans     &trans     &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &kp EXCL  &kp AT       &kp HASH    &trans  &trans    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PIPE       &kp DEL
&kp CARET   &kp EXCL  &kp PERCENT  &kp DOLLAR  &trans  &trans    &kp LESS_THAN         &kp MINUS              &kp EQUAL         &kp GREATER_THAN   &kp BACKSLASH  &kp GRAVE
&trans      &trans    &trans       &trans      &trans  &trans    &kp UNDER             &kp PLUS               &kp STAR          &kp AMPERSAND      &kp QUESTION   &kp TILDE
                                   &trans      &trans  &trans    &trans                &trans                 &trans
            >;
        };

        GUI_numbers {
            bindings = <
&kp ESCAPE  &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &kp LG(N4)  &kp LG(N5)    &kp LG(N6)  &kp LG(N7)  &kp LG(N8)  &kp LG(N9)  &kp LG(N0)         &kp DEL
&trans      &trans      &trans      &trans      &trans      &trans        &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &kp LG(BACKSLASH)  &trans
&trans      &trans      &trans      &trans      &trans      &trans        &kp PG_UP   &kp PG_DN   &trans      &trans      &kp HOME           &kp END
                                    &trans      &trans      &trans        &trans      &trans      &trans
            >;
        };

        system_keys {
            bindings = <
&trans  &kp K_MUTE    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans        &trans          &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans  &trans  &trans  &trans
&trans  &trans        &trans             &trans           &out OUT_USB  &out OUT_BLE    &trans                &trans                &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1       &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_CLR            &trans                &trans  &trans  &trans  &bt BT_CLR_ALL
                                         &trans           &trans        &trans          &trans                &trans                &trans
            >;
        };

        function_keys {
            bindings = <
&trans  &trans  &kp F9  &kp F10  &kp F11  &kp F12    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp F5  &kp F6   &kp F7   &kp F8     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp F1  &kp F2   &kp F3   &kp F4     &trans  &trans  &trans  &trans  &trans  &trans
                        &trans   &trans   &trans     &trans  &trans  &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
